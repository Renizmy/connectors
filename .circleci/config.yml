version: 2.1

jobs:

  
  build_external-import_comlaude:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/comlaude
          command: |
            echo "Processing external-import/comlaude"
            cd external-import/comlaude
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-comlaude:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-comlaude:6.4.1 renizmy/connector-comlaude:latest
            docker push renizmy/connector-comlaude:6.4.1
            docker push renizmy/connector-comlaude:latest
      
  build_external-import_shadowserver:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/shadowserver
          command: |
            echo "Processing external-import/shadowserver"
            cd external-import/shadowserver
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-shadowserver:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-shadowserver:6.4.1 renizmy/connector-shadowserver:latest
            docker push renizmy/connector-shadowserver:6.4.1
            docker push renizmy/connector-shadowserver:latest
      
  build_external-import_tweetfeed:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/tweetfeed
          command: |
            echo "Processing external-import/tweetfeed"
            cd external-import/tweetfeed
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-tweetfeed:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-tweetfeed:6.4.1 renizmy/connector-tweetfeed:latest
            docker push renizmy/connector-tweetfeed:6.4.1
            docker push renizmy/connector-tweetfeed:latest
      
  build_external-import_lastinfosec:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/lastinfosec
          command: |
            echo "Processing external-import/lastinfosec"
            cd external-import/lastinfosec
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-lastinfosec:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-lastinfosec:6.4.1 renizmy/connector-lastinfosec:latest
            docker push renizmy/connector-lastinfosec:6.4.1
            docker push renizmy/connector-lastinfosec:latest
      
  build_external-import_sentinelone-threats:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/sentinelone-threats
          command: |
            echo "Processing external-import/sentinelone-threats"
            cd external-import/sentinelone-threats
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-sentinelone-threats:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-sentinelone-threats:6.4.1 renizmy/connector-sentinelone-threats:latest
            docker push renizmy/connector-sentinelone-threats:6.4.1
            docker push renizmy/connector-sentinelone-threats:latest
      
  build_external-import_citalid:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/citalid
          command: |
            echo "Processing external-import/citalid"
            cd external-import/citalid
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-citalid:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-citalid:6.4.1 renizmy/connector-citalid:latest
            docker push renizmy/connector-citalid:6.4.1
            docker push renizmy/connector-citalid:latest
      
  build_external-import_malcore:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/malcore
          command: |
            echo "Processing external-import/malcore"
            cd external-import/malcore
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-malcore:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-malcore:6.4.1 renizmy/connector-malcore:latest
            docker push renizmy/connector-malcore:6.4.1
            docker push renizmy/connector-malcore:latest
      
  build_external-import_rst-report-hub:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/rst-report-hub
          command: |
            echo "Processing external-import/rst-report-hub"
            cd external-import/rst-report-hub
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-rst-report-hub:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-rst-report-hub:6.4.1 renizmy/connector-rst-report-hub:latest
            docker push renizmy/connector-rst-report-hub:6.4.1
            docker push renizmy/connector-rst-report-hub:latest
      
  build_external-import_malpedia:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/malpedia
          command: |
            echo "Processing external-import/malpedia"
            cd external-import/malpedia
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-malpedia:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-malpedia:6.4.1 renizmy/connector-malpedia:latest
            docker push renizmy/connector-malpedia:6.4.1
            docker push renizmy/connector-malpedia:latest
      
  build_external-import_cyber-campaign-collection:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cyber-campaign-collection
          command: |
            echo "Processing external-import/cyber-campaign-collection"
            cd external-import/cyber-campaign-collection
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cyber-campaign-collection:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cyber-campaign-collection:6.4.1 renizmy/connector-cyber-campaign-collection:latest
            docker push renizmy/connector-cyber-campaign-collection:6.4.1
            docker push renizmy/connector-cyber-campaign-collection:latest
      
  build_external-import_abuse-ssl:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/abuse-ssl
          command: |
            echo "Processing external-import/abuse-ssl"
            cd external-import/abuse-ssl
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-abuse-ssl:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-abuse-ssl:6.4.1 renizmy/connector-abuse-ssl:latest
            docker push renizmy/connector-abuse-ssl:6.4.1
            docker push renizmy/connector-abuse-ssl:latest
      
  build_external-import_urlhaus-recent-payloads:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/urlhaus-recent-payloads
          command: |
            echo "Processing external-import/urlhaus-recent-payloads"
            cd external-import/urlhaus-recent-payloads
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-urlhaus-recent-payloads:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-urlhaus-recent-payloads:6.4.1 renizmy/connector-urlhaus-recent-payloads:latest
            docker push renizmy/connector-urlhaus-recent-payloads:6.4.1
            docker push renizmy/connector-urlhaus-recent-payloads:latest
      
  build_external-import_crits:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/crits
          command: |
            echo "Processing external-import/crits"
            cd external-import/crits
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-crits:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-crits:6.4.1 renizmy/connector-crits:latest
            docker push renizmy/connector-crits:6.4.1
            docker push renizmy/connector-crits:latest
      
  build_external-import_sentinel-incidents:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/sentinel-incidents
          command: |
            echo "Processing external-import/sentinel-incidents"
            cd external-import/sentinel-incidents
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-sentinel-incidents:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-sentinel-incidents:6.4.1 renizmy/connector-sentinel-incidents:latest
            docker push renizmy/connector-sentinel-incidents:6.4.1
            docker push renizmy/connector-sentinel-incidents:latest
      
  build_external-import_urlhaus:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/urlhaus
          command: |
            echo "Processing external-import/urlhaus"
            cd external-import/urlhaus
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-urlhaus:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-urlhaus:6.4.1 renizmy/connector-urlhaus:latest
            docker push renizmy/connector-urlhaus:6.4.1
            docker push renizmy/connector-urlhaus:latest
      
  build_external-import_mwdb:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/mwdb
          command: |
            echo "Processing external-import/mwdb"
            cd external-import/mwdb
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-mwdb:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-mwdb:6.4.1 renizmy/connector-mwdb:latest
            docker push renizmy/connector-mwdb:6.4.1
            docker push renizmy/connector-mwdb:latest
      
  build_external-import_cve:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cve
          command: |
            echo "Processing external-import/cve"
            cd external-import/cve
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cve:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cve:6.4.1 renizmy/connector-cve:latest
            docker push renizmy/connector-cve:6.4.1
            docker push renizmy/connector-cve:latest
      
  build_external-import_malwarebazaar-recent-additions:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/malwarebazaar-recent-additions
          command: |
            echo "Processing external-import/malwarebazaar-recent-additions"
            cd external-import/malwarebazaar-recent-additions
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-malwarebazaar-recent-additions:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-malwarebazaar-recent-additions:6.4.1 renizmy/connector-malwarebazaar-recent-additions:latest
            docker push renizmy/connector-malwarebazaar-recent-additions:6.4.1
            docker push renizmy/connector-malwarebazaar-recent-additions:latest
      
  build_external-import_mandiant:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/mandiant
          command: |
            echo "Processing external-import/mandiant"
            cd external-import/mandiant
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-mandiant:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-mandiant:6.4.1 renizmy/connector-mandiant:latest
            docker push renizmy/connector-mandiant:6.4.1
            docker push renizmy/connector-mandiant:latest
      
  build_external-import_cybersixgill:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cybersixgill
          command: |
            echo "Processing external-import/cybersixgill"
            cd external-import/cybersixgill
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cybersixgill:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cybersixgill:6.4.1 renizmy/connector-cybersixgill:latest
            docker push renizmy/connector-cybersixgill:6.4.1
            docker push renizmy/connector-cybersixgill:latest
      
  build_external-import_phishunt:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/phishunt
          command: |
            echo "Processing external-import/phishunt"
            cd external-import/phishunt
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-phishunt:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-phishunt:6.4.1 renizmy/connector-phishunt:latest
            docker push renizmy/connector-phishunt:6.4.1
            docker push renizmy/connector-phishunt:latest
      
  build_external-import_disarm-framework:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/disarm-framework
          command: |
            echo "Processing external-import/disarm-framework"
            cd external-import/disarm-framework
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-disarm-framework:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-disarm-framework:6.4.1 renizmy/connector-disarm-framework:latest
            docker push renizmy/connector-disarm-framework:6.4.1
            docker push renizmy/connector-disarm-framework:latest
      
  build_external-import_opencsam:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/opencsam
          command: |
            echo "Processing external-import/opencsam"
            cd external-import/opencsam
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-opencsam:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-opencsam:6.4.1 renizmy/connector-opencsam:latest
            docker push renizmy/connector-opencsam:6.4.1
            docker push renizmy/connector-opencsam:latest
      
  build_external-import_crowdstrike:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/crowdstrike
          command: |
            echo "Processing external-import/crowdstrike"
            cd external-import/crowdstrike
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-crowdstrike:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-crowdstrike:6.4.1 renizmy/connector-crowdstrike:latest
            docker push renizmy/connector-crowdstrike:6.4.1
            docker push renizmy/connector-crowdstrike:latest
      
  build_external-import_cisa-known-exploited-vulnerabilities:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cisa-known-exploited-vulnerabilities
          command: |
            echo "Processing external-import/cisa-known-exploited-vulnerabilities"
            cd external-import/cisa-known-exploited-vulnerabilities
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cisa-known-exploited-vulnerabilities:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cisa-known-exploited-vulnerabilities:6.4.1 renizmy/connector-cisa-known-exploited-vulnerabilities:latest
            docker push renizmy/connector-cisa-known-exploited-vulnerabilities:6.4.1
            docker push renizmy/connector-cisa-known-exploited-vulnerabilities:latest
      
  build_external-import_opencti:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/opencti
          command: |
            echo "Processing external-import/opencti"
            cd external-import/opencti
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-opencti:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-opencti:6.4.1 renizmy/connector-opencti:latest
            docker push renizmy/connector-opencti:6.4.1
            docker push renizmy/connector-opencti:latest
      
  build_external-import_cluster25:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cluster25
          command: |
            echo "Processing external-import/cluster25"
            cd external-import/cluster25
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cluster25:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cluster25:6.4.1 renizmy/connector-cluster25:latest
            docker push renizmy/connector-cluster25:6.4.1
            docker push renizmy/connector-cluster25:latest
      
  build_external-import_maltiverse:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/maltiverse
          command: |
            echo "Processing external-import/maltiverse"
            cd external-import/maltiverse
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-maltiverse:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-maltiverse:6.4.1 renizmy/connector-maltiverse:latest
            docker push renizmy/connector-maltiverse:6.4.1
            docker push renizmy/connector-maltiverse:latest
      
  build_external-import_threatfox:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/threatfox
          command: |
            echo "Processing external-import/threatfox"
            cd external-import/threatfox
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-threatfox:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-threatfox:6.4.1 renizmy/connector-threatfox:latest
            docker push renizmy/connector-threatfox:6.4.1
            docker push renizmy/connector-threatfox:latest
      
  build_external-import_taxii2:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/taxii2
          command: |
            echo "Processing external-import/taxii2"
            cd external-import/taxii2
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-taxii2:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-taxii2:6.4.1 renizmy/connector-taxii2:latest
            docker push renizmy/connector-taxii2:6.4.1
            docker push renizmy/connector-taxii2:latest
      
  build_external-import_thehive:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/thehive
          command: |
            echo "Processing external-import/thehive"
            cd external-import/thehive
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-thehive:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-thehive:6.4.1 renizmy/connector-thehive:latest
            docker push renizmy/connector-thehive:6.4.1
            docker push renizmy/connector-thehive:latest
      
  build_external-import_google-drive:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/google-drive
          command: |
            echo "Processing external-import/google-drive"
            cd external-import/google-drive
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-google-drive:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-google-drive:6.4.1 renizmy/connector-google-drive:latest
            docker push renizmy/connector-google-drive:6.4.1
            docker push renizmy/connector-google-drive:latest
      
  build_external-import_cisco-sma:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cisco-sma
          command: |
            echo "Processing external-import/cisco-sma"
            cd external-import/cisco-sma
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cisco-sma:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cisco-sma:6.4.1 renizmy/connector-cisco-sma:latest
            docker push renizmy/connector-cisco-sma:6.4.1
            docker push renizmy/connector-cisco-sma:latest
      
  build_external-import_valhalla:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/valhalla
          command: |
            echo "Processing external-import/valhalla"
            cd external-import/valhalla
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-valhalla:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-valhalla:6.4.1 renizmy/connector-valhalla:latest
            docker push renizmy/connector-valhalla:6.4.1
            docker push renizmy/connector-valhalla:latest
      
  build_external-import_kaspersky:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/kaspersky
          command: |
            echo "Processing external-import/kaspersky"
            cd external-import/kaspersky
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-kaspersky:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-kaspersky:6.4.1 renizmy/connector-kaspersky:latest
            docker push renizmy/connector-kaspersky:6.4.1
            docker push renizmy/connector-kaspersky:latest
      
  build_external-import_obstracts:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/obstracts
          command: |
            echo "Processing external-import/obstracts"
            cd external-import/obstracts
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-obstracts:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-obstracts:6.4.1 renizmy/connector-obstracts:latest
            docker push renizmy/connector-obstracts:6.4.1
            docker push renizmy/connector-obstracts:latest
      
  build_external-import_red-flag-domains:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/red-flag-domains
          command: |
            echo "Processing external-import/red-flag-domains"
            cd external-import/red-flag-domains
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-red-flag-domains:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-red-flag-domains:6.4.1 renizmy/connector-red-flag-domains:latest
            docker push renizmy/connector-red-flag-domains:6.4.1
            docker push renizmy/connector-red-flag-domains:latest
      
  build_external-import_stopforumspam:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/stopforumspam
          command: |
            echo "Processing external-import/stopforumspam"
            cd external-import/stopforumspam
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-stopforumspam:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-stopforumspam:6.4.1 renizmy/connector-stopforumspam:latest
            docker push renizmy/connector-stopforumspam:6.4.1
            docker push renizmy/connector-stopforumspam:latest
      
  build_external-import_flashpoint:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/flashpoint
          command: |
            echo "Processing external-import/flashpoint"
            cd external-import/flashpoint
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-flashpoint:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-flashpoint:6.4.1 renizmy/connector-flashpoint:latest
            docker push renizmy/connector-flashpoint:6.4.1
            docker push renizmy/connector-flashpoint:latest
      
  build_external-import_mitre-atlas:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/mitre-atlas
          command: |
            echo "Processing external-import/mitre-atlas"
            cd external-import/mitre-atlas
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-mitre-atlas:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-mitre-atlas:6.4.1 renizmy/connector-mitre-atlas:latest
            docker push renizmy/connector-mitre-atlas:6.4.1
            docker push renizmy/connector-mitre-atlas:latest
      
  build_external-import_chapsvision:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/chapsvision
          command: |
            echo "Processing external-import/chapsvision"
            cd external-import/chapsvision
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-chapsvision:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-chapsvision:6.4.1 renizmy/connector-chapsvision:latest
            docker push renizmy/connector-chapsvision:6.4.1
            docker push renizmy/connector-chapsvision:latest
      
  build_external-import_fortinet-ti:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/fortinet-ti
          command: |
            echo "Processing external-import/fortinet-ti"
            cd external-import/fortinet-ti
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-fortinet-ti:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-fortinet-ti:6.4.1 renizmy/connector-fortinet-ti:latest
            docker push renizmy/connector-fortinet-ti:6.4.1
            docker push renizmy/connector-fortinet-ti:latest
      
  build_external-import_tanium-incidents:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/tanium-incidents
          command: |
            echo "Processing external-import/tanium-incidents"
            cd external-import/tanium-incidents
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-tanium-incidents:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-tanium-incidents:6.4.1 renizmy/connector-tanium-incidents:latest
            docker push renizmy/connector-tanium-incidents:6.4.1
            docker push renizmy/connector-tanium-incidents:latest
      
  build_external-import_tenable-vuln-management:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/tenable-vuln-management
          command: |
            echo "Processing external-import/tenable-vuln-management"
            cd external-import/tenable-vuln-management
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-tenable-vuln-management:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-tenable-vuln-management:6.4.1 renizmy/connector-tenable-vuln-management:latest
            docker push renizmy/connector-tenable-vuln-management:6.4.1
            docker push renizmy/connector-tenable-vuln-management:latest
      
  build_external-import_intelfinder:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/intelfinder
          command: |
            echo "Processing external-import/intelfinder"
            cd external-import/intelfinder
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-intelfinder:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-intelfinder:6.4.1 renizmy/connector-intelfinder:latest
            docker push renizmy/connector-intelfinder:6.4.1
            docker push renizmy/connector-intelfinder:latest
      
  build_external-import_intel471:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/intel471
          command: |
            echo "Processing external-import/intel471"
            cd external-import/intel471
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-intel471:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-intel471:6.4.1 renizmy/connector-intel471:latest
            docker push renizmy/connector-intel471:6.4.1
            docker push renizmy/connector-intel471:latest
      
  build_external-import_misp:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/misp
          command: |
            echo "Processing external-import/misp"
            cd external-import/misp
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-misp:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-misp:6.4.1 renizmy/connector-misp:latest
            docker push renizmy/connector-misp:6.4.1
            docker push renizmy/connector-misp:latest
      
  build_external-import_misp-feed:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/misp-feed
          command: |
            echo "Processing external-import/misp-feed"
            cd external-import/misp-feed
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-misp-feed:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-misp-feed:6.4.1 renizmy/connector-misp-feed:latest
            docker push renizmy/connector-misp-feed:6.4.1
            docker push renizmy/connector-misp-feed:latest
      
  build_external-import_eset:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/eset
          command: |
            echo "Processing external-import/eset"
            cd external-import/eset
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-eset:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-eset:6.4.1 renizmy/connector-eset:latest
            docker push renizmy/connector-eset:6.4.1
            docker push renizmy/connector-eset:latest
      
  build_external-import_greynoise-feed:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/greynoise-feed
          command: |
            echo "Processing external-import/greynoise-feed"
            cd external-import/greynoise-feed
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-greynoise-feed:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-greynoise-feed:6.4.1 renizmy/connector-greynoise-feed:latest
            docker push renizmy/connector-greynoise-feed:6.4.1
            docker push renizmy/connector-greynoise-feed:latest
      
  build_external-import_recorded-future:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/recorded-future
          command: |
            echo "Processing external-import/recorded-future"
            cd external-import/recorded-future
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-recorded-future:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-recorded-future:6.4.1 renizmy/connector-recorded-future:latest
            docker push renizmy/connector-recorded-future:6.4.1
            docker push renizmy/connector-recorded-future:latest
      
  build_external-import_riskiq:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/riskiq
          command: |
            echo "Processing external-import/riskiq"
            cd external-import/riskiq
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-riskiq:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-riskiq:6.4.1 renizmy/connector-riskiq:latest
            docker push renizmy/connector-riskiq:6.4.1
            docker push renizmy/connector-riskiq:latest
      
  build_external-import_group-ib:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/group-ib
          command: |
            echo "Processing external-import/group-ib"
            cd external-import/group-ib
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-group-ib:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-group-ib:6.4.1 renizmy/connector-group-ib:latest
            docker push renizmy/connector-group-ib:6.4.1
            docker push renizmy/connector-group-ib:latest
      
  build_external-import_harfanglab-incidents:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/harfanglab-incidents
          command: |
            echo "Processing external-import/harfanglab-incidents"
            cd external-import/harfanglab-incidents
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-harfanglab-incidents:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-harfanglab-incidents:6.4.1 renizmy/connector-harfanglab-incidents:latest
            docker push renizmy/connector-harfanglab-incidents:6.4.1
            docker push renizmy/connector-harfanglab-incidents:latest
      
  build_external-import_silobreaker:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/silobreaker
          command: |
            echo "Processing external-import/silobreaker"
            cd external-import/silobreaker
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-silobreaker:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-silobreaker:6.4.1 renizmy/connector-silobreaker:latest
            docker push renizmy/connector-silobreaker:6.4.1
            docker push renizmy/connector-silobreaker:latest
      
  build_external-import_alienvault:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/alienvault
          command: |
            echo "Processing external-import/alienvault"
            cd external-import/alienvault
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-alienvault:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-alienvault:6.4.1 renizmy/connector-alienvault:latest
            docker push renizmy/connector-alienvault:6.4.1
            docker push renizmy/connector-alienvault:latest
      
  build_external-import_zerofox:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/zerofox
          command: |
            echo "Processing external-import/zerofox"
            cd external-import/zerofox
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-zerofox:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-zerofox:6.4.1 renizmy/connector-zerofox:latest
            docker push renizmy/connector-zerofox:6.4.1
            docker push renizmy/connector-zerofox:latest
      
  build_external-import_cuckoo:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cuckoo
          command: |
            echo "Processing external-import/cuckoo"
            cd external-import/cuckoo
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cuckoo:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cuckoo:6.4.1 renizmy/connector-cuckoo:latest
            docker push renizmy/connector-cuckoo:6.4.1
            docker push renizmy/connector-cuckoo:latest
      
  build_external-import_cpe:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cpe
          command: |
            echo "Processing external-import/cpe"
            cd external-import/cpe
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cpe:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cpe:6.4.1 renizmy/connector-cpe:latest
            docker push renizmy/connector-cpe:6.4.1
            docker push renizmy/connector-cpe:latest
      
  build_external-import_restore-files:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/restore-files
          command: |
            echo "Processing external-import/restore-files"
            cd external-import/restore-files
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-restore-files:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-restore-files:6.4.1 renizmy/connector-restore-files:latest
            docker push renizmy/connector-restore-files:6.4.1
            docker push renizmy/connector-restore-files:latest
      
  build_external-import_stixify:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/stixify
          command: |
            echo "Processing external-import/stixify"
            cd external-import/stixify
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-stixify:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-stixify:6.4.1 renizmy/connector-stixify:latest
            docker push renizmy/connector-stixify:6.4.1
            docker push renizmy/connector-stixify:latest
      
  build_external-import_orange-cyberdefense:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/orange-cyberdefense
          command: |
            echo "Processing external-import/orange-cyberdefense"
            cd external-import/orange-cyberdefense
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-orange-cyberdefense:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-orange-cyberdefense:6.4.1 renizmy/connector-orange-cyberdefense:latest
            docker push renizmy/connector-orange-cyberdefense:6.4.1
            docker push renizmy/connector-orange-cyberdefense:latest
      
  build_external-import_abuseipdb-ipblacklist:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/abuseipdb-ipblacklist
          command: |
            echo "Processing external-import/abuseipdb-ipblacklist"
            cd external-import/abuseipdb-ipblacklist
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-abuseipdb-ipblacklist:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-abuseipdb-ipblacklist:6.4.1 renizmy/connector-abuseipdb-ipblacklist:latest
            docker push renizmy/connector-abuseipdb-ipblacklist:6.4.1
            docker push renizmy/connector-abuseipdb-ipblacklist:latest
      
  build_external-import_sekoia:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/sekoia
          command: |
            echo "Processing external-import/sekoia"
            cd external-import/sekoia
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-sekoia:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-sekoia:6.4.1 renizmy/connector-sekoia:latest
            docker push renizmy/connector-sekoia:6.4.1
            docker push renizmy/connector-sekoia:latest
      
  build_external-import_vxvault:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/vxvault
          command: |
            echo "Processing external-import/vxvault"
            cd external-import/vxvault
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-vxvault:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-vxvault:6.4.1 renizmy/connector-vxvault:latest
            docker push renizmy/connector-vxvault:6.4.1
            docker push renizmy/connector-vxvault:latest
      
  build_external-import_mitre:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/mitre
          command: |
            echo "Processing external-import/mitre"
            cd external-import/mitre
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-mitre:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-mitre:6.4.1 renizmy/connector-mitre:latest
            docker push renizmy/connector-mitre:6.4.1
            docker push renizmy/connector-mitre:latest
      
  build_external-import_crtsh:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/crtsh
          command: |
            echo "Processing external-import/crtsh"
            cd external-import/crtsh
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-crtsh:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-crtsh:6.4.1 renizmy/connector-crtsh:latest
            docker push renizmy/connector-crtsh:6.4.1
            docker push renizmy/connector-crtsh:latest
      
  build_external-import_virustotal-livehunt-notifications:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/virustotal-livehunt-notifications
          command: |
            echo "Processing external-import/virustotal-livehunt-notifications"
            cd external-import/virustotal-livehunt-notifications
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-virustotal-livehunt-notifications:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-virustotal-livehunt-notifications:6.4.1 renizmy/connector-virustotal-livehunt-notifications:latest
            docker push renizmy/connector-virustotal-livehunt-notifications:6.4.1
            docker push renizmy/connector-virustotal-livehunt-notifications:latest
      
  build_external-import_infoblox:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/infoblox
          command: |
            echo "Processing external-import/infoblox"
            cd external-import/infoblox
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-infoblox:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-infoblox:6.4.1 renizmy/connector-infoblox:latest
            docker push renizmy/connector-infoblox:6.4.1
            docker push renizmy/connector-infoblox:latest
      
  build_external-import_cofense:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cofense
          command: |
            echo "Processing external-import/cofense"
            cd external-import/cofense
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cofense:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cofense:6.4.1 renizmy/connector-cofense:latest
            docker push renizmy/connector-cofense:6.4.1
            docker push renizmy/connector-cofense:latest
      
  build_external-import_rst-threat-feed:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/rst-threat-feed
          command: |
            echo "Processing external-import/rst-threat-feed"
            cd external-import/rst-threat-feed
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-rst-threat-feed:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-rst-threat-feed:6.4.1 renizmy/connector-rst-threat-feed:latest
            docker push renizmy/connector-rst-threat-feed:6.4.1
            docker push renizmy/connector-rst-threat-feed:latest
      
  build_external-import_siemrules:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/siemrules
          command: |
            echo "Processing external-import/siemrules"
            cd external-import/siemrules
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-siemrules:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-siemrules:6.4.1 renizmy/connector-siemrules:latest
            docker push renizmy/connector-siemrules:6.4.1
            docker push renizmy/connector-siemrules:latest
      
  build_external-import_cape:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/cape
          command: |
            echo "Processing external-import/cape"
            cd external-import/cape
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-cape:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-cape:6.4.1 renizmy/connector-cape:latest
            docker push renizmy/connector-cape:6.4.1
            docker push renizmy/connector-cape:latest
      
  build_external-import_ironnet:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/ironnet
          command: |
            echo "Processing external-import/ironnet"
            cd external-import/ironnet
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-ironnet:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-ironnet:6.4.1 renizmy/connector-ironnet:latest
            docker push renizmy/connector-ironnet:6.4.1
            docker push renizmy/connector-ironnet:latest
      
  build_external-import_urlscan:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/urlscan
          command: |
            echo "Processing external-import/urlscan"
            cd external-import/urlscan
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-urlscan:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-urlscan:6.4.1 renizmy/connector-urlscan:latest
            docker push renizmy/connector-urlscan:6.4.1
            docker push renizmy/connector-urlscan:latest
      
  build_external-import_anyrun-feed:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/anyrun-feed
          command: |
            echo "Processing external-import/anyrun-feed"
            cd external-import/anyrun-feed
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-anyrun-feed:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-anyrun-feed:6.4.1 renizmy/connector-anyrun-feed:latest
            docker push renizmy/connector-anyrun-feed:6.4.1
            docker push renizmy/connector-anyrun-feed:latest
      
  build_external-import_ransomwarelive:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/ransomwarelive
          command: |
            echo "Processing external-import/ransomwarelive"
            cd external-import/ransomwarelive
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-ransomwarelive:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-ransomwarelive:6.4.1 renizmy/connector-ransomwarelive:latest
            docker push renizmy/connector-ransomwarelive:6.4.1
            docker push renizmy/connector-ransomwarelive:latest
      
  build_external-import_feedly:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/feedly
          command: |
            echo "Processing external-import/feedly"
            cd external-import/feedly
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-feedly:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-feedly:6.4.1 renizmy/connector-feedly:latest
            docker push renizmy/connector-feedly:6.4.1
            docker push renizmy/connector-feedly:latest
      
  build_external-import_socprime:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/socprime
          command: |
            echo "Processing external-import/socprime"
            cd external-import/socprime
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-socprime:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-socprime:6.4.1 renizmy/connector-socprime:latest
            docker push renizmy/connector-socprime:6.4.1
            docker push renizmy/connector-socprime:latest
      
  build_external-import_diode-import:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/diode-import
          command: |
            echo "Processing external-import/diode-import"
            cd external-import/diode-import
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-diode-import:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-diode-import:6.4.1 renizmy/connector-diode-import:latest
            docker push renizmy/connector-diode-import:6.4.1
            docker push renizmy/connector-diode-import:latest
      
  build_external-import_threatmatch:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/threatmatch
          command: |
            echo "Processing external-import/threatmatch"
            cd external-import/threatmatch
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-threatmatch:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-threatmatch:6.4.1 renizmy/connector-threatmatch:latest
            docker push renizmy/connector-threatmatch:6.4.1
            docker push renizmy/connector-threatmatch:latest
      
  build_external-import_vulmatch:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build external-import/vulmatch
          command: |
            echo "Processing external-import/vulmatch"
            cd external-import/vulmatch
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-vulmatch:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-vulmatch:6.4.1 renizmy/connector-vulmatch:latest
            docker push renizmy/connector-vulmatch:6.4.1
            docker push renizmy/connector-vulmatch:latest
      

  
  build_stream_harfanglab-intel:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/harfanglab-intel
          command: |
            echo "Processing stream/harfanglab-intel"
            cd stream/harfanglab-intel
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-harfanglab-intel:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-harfanglab-intel:6.4.1 renizmy/connector-harfanglab-intel:latest
            docker push renizmy/connector-harfanglab-intel:6.4.1
            docker push renizmy/connector-harfanglab-intel:latest
      
  build_stream_crowdstrike-endpoint-security:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/crowdstrike-endpoint-security
          command: |
            echo "Processing stream/crowdstrike-endpoint-security"
            cd stream/crowdstrike-endpoint-security
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-crowdstrike-endpoint-security:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-crowdstrike-endpoint-security:6.4.1 renizmy/connector-crowdstrike-endpoint-security:latest
            docker push renizmy/connector-crowdstrike-endpoint-security:6.4.1
            docker push renizmy/connector-crowdstrike-endpoint-security:latest
      
  build_stream_webhook:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/webhook
          command: |
            echo "Processing stream/webhook"
            cd stream/webhook
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-webhook:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-webhook:6.4.1 renizmy/connector-webhook:latest
            docker push renizmy/connector-webhook:6.4.1
            docker push renizmy/connector-webhook:latest
      
  build_stream_splunk:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/splunk
          command: |
            echo "Processing stream/splunk"
            cd stream/splunk
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-splunk:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-splunk:6.4.1 renizmy/connector-splunk:latest
            docker push renizmy/connector-splunk:6.4.1
            docker push renizmy/connector-splunk:latest
      
  build_stream_sentinel-intel:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/sentinel-intel
          command: |
            echo "Processing stream/sentinel-intel"
            cd stream/sentinel-intel
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-sentinel-intel:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-sentinel-intel:6.4.1 renizmy/connector-sentinel-intel:latest
            docker push renizmy/connector-sentinel-intel:6.4.1
            docker push renizmy/connector-sentinel-intel:latest
      
  build_stream_qradar:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/qradar
          command: |
            echo "Processing stream/qradar"
            cd stream/qradar
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-qradar:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-qradar:6.4.1 renizmy/connector-qradar:latest
            docker push renizmy/connector-qradar:6.4.1
            docker push renizmy/connector-qradar:latest
      
  build_stream_harfanglab:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/harfanglab
          command: |
            echo "Processing stream/harfanglab"
            cd stream/harfanglab
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-harfanglab:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-harfanglab:6.4.1 renizmy/connector-harfanglab:latest
            docker push renizmy/connector-harfanglab:6.4.1
            docker push renizmy/connector-harfanglab:latest
      
  build_stream_virustotal-livehunt-rules:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/virustotal-livehunt-rules
          command: |
            echo "Processing stream/virustotal-livehunt-rules"
            cd stream/virustotal-livehunt-rules
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-virustotal-livehunt-rules:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-virustotal-livehunt-rules:6.4.1 renizmy/connector-virustotal-livehunt-rules:latest
            docker push renizmy/connector-virustotal-livehunt-rules:6.4.1
            docker push renizmy/connector-virustotal-livehunt-rules:latest
      
  build_stream_backup-files:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/backup-files
          command: |
            echo "Processing stream/backup-files"
            cd stream/backup-files
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-backup-files:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-backup-files:6.4.1 renizmy/connector-backup-files:latest
            docker push renizmy/connector-backup-files:6.4.1
            docker push renizmy/connector-backup-files:latest
      
  build_stream_logrhythm:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/logrhythm
          command: |
            echo "Processing stream/logrhythm"
            cd stream/logrhythm
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-logrhythm:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-logrhythm:6.4.1 renizmy/connector-logrhythm:latest
            docker push renizmy/connector-logrhythm:6.4.1
            docker push renizmy/connector-logrhythm:latest
      
  build_stream_taxii-post:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/taxii-post
          command: |
            echo "Processing stream/taxii-post"
            cd stream/taxii-post
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-taxii-post:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-taxii-post:6.4.1 renizmy/connector-taxii-post:latest
            docker push renizmy/connector-taxii-post:6.4.1
            docker push renizmy/connector-taxii-post:latest
      
  build_stream_tanium:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/tanium
          command: |
            echo "Processing stream/tanium"
            cd stream/tanium
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-tanium:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-tanium:6.4.1 renizmy/connector-tanium:latest
            docker push renizmy/connector-tanium:6.4.1
            docker push renizmy/connector-tanium:latest
      
  build_stream_chronicle:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/chronicle
          command: |
            echo "Processing stream/chronicle"
            cd stream/chronicle
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-chronicle:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-chronicle:6.4.1 renizmy/connector-chronicle:latest
            docker push renizmy/connector-chronicle:6.4.1
            docker push renizmy/connector-chronicle:latest
      
  build_stream_jira:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/jira
          command: |
            echo "Processing stream/jira"
            cd stream/jira
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-jira:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-jira:6.4.1 renizmy/connector-jira:latest
            docker push renizmy/connector-jira:6.4.1
            docker push renizmy/connector-jira:latest
      
  build_stream_elastic:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/elastic
          command: |
            echo "Processing stream/elastic"
            cd stream/elastic
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-elastic:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-elastic:6.4.1 renizmy/connector-elastic:latest
            docker push renizmy/connector-elastic:6.4.1
            docker push renizmy/connector-elastic:latest
      
  build_stream_sentinel:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/sentinel
          command: |
            echo "Processing stream/sentinel"
            cd stream/sentinel
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-sentinel:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-sentinel:6.4.1 renizmy/connector-sentinel:latest
            docker push renizmy/connector-sentinel:6.4.1
            docker push renizmy/connector-sentinel:latest
      
  build_stream_tanium-intel:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build stream/tanium-intel
          command: |
            echo "Processing stream/tanium-intel"
            cd stream/tanium-intel
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-tanium-intel:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-tanium-intel:6.4.1 renizmy/connector-tanium-intel:latest
            docker push renizmy/connector-tanium-intel:6.4.1
            docker push renizmy/connector-tanium-intel:latest
      

  
  build_internal-export-file_export-ttps-file-navigator:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build internal-export-file/export-ttps-file-navigator
          command: |
            echo "Processing internal-export-file/export-ttps-file-navigator"
            cd internal-export-file/export-ttps-file-navigator
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-export-ttps-file-navigator:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-export-ttps-file-navigator:6.4.1 renizmy/connector-export-ttps-file-navigator:latest
            docker push renizmy/connector-export-ttps-file-navigator:6.4.1
            docker push renizmy/connector-export-ttps-file-navigator:latest
      
  build_internal-export-file_export-report-pdf:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build internal-export-file/export-report-pdf
          command: |
            echo "Processing internal-export-file/export-report-pdf"
            cd internal-export-file/export-report-pdf
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-export-report-pdf:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-export-report-pdf:6.4.1 renizmy/connector-export-report-pdf:latest
            docker push renizmy/connector-export-report-pdf:6.4.1
            docker push renizmy/connector-export-report-pdf:latest
      
  build_internal-export-file_export-file-txt:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build internal-export-file/export-file-txt
          command: |
            echo "Processing internal-export-file/export-file-txt"
            cd internal-export-file/export-file-txt
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-export-file-txt:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-export-file-txt:6.4.1 renizmy/connector-export-file-txt:latest
            docker push renizmy/connector-export-file-txt:6.4.1
            docker push renizmy/connector-export-file-txt:latest
      
  build_internal-export-file_export-file-csv:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build internal-export-file/export-file-csv
          command: |
            echo "Processing internal-export-file/export-file-csv"
            cd internal-export-file/export-file-csv
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-export-file-csv:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-export-file-csv:6.4.1 renizmy/connector-export-file-csv:latest
            docker push renizmy/connector-export-file-csv:6.4.1
            docker push renizmy/connector-export-file-csv:latest
      
  build_internal-export-file_export-file-stix:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build internal-export-file/export-file-stix
          command: |
            echo "Processing internal-export-file/export-file-stix"
            cd internal-export-file/export-file-stix
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-export-file-stix:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-export-file-stix:6.4.1 renizmy/connector-export-file-stix:latest
            docker push renizmy/connector-export-file-stix:6.4.1
            docker push renizmy/connector-export-file-stix:latest
      

  
  build_internal-import-file_import-file-stix:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build internal-import-file/import-file-stix
          command: |
            echo "Processing internal-import-file/import-file-stix"
            cd internal-import-file/import-file-stix
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-import-file-stix:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-import-file-stix:6.4.1 renizmy/connector-import-file-stix:latest
            docker push renizmy/connector-import-file-stix:6.4.1
            docker push renizmy/connector-import-file-stix:latest
      
  build_internal-import-file_import-file-misp:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build internal-import-file/import-file-misp
          command: |
            echo "Processing internal-import-file/import-file-misp"
            cd internal-import-file/import-file-misp
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-import-file-misp:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-import-file-misp:6.4.1 renizmy/connector-import-file-misp:latest
            docker push renizmy/connector-import-file-misp:6.4.1
            docker push renizmy/connector-import-file-misp:latest
      
  build_internal-import-file_import-document:
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build internal-import-file/import-document
          command: |
            echo "Processing internal-import-file/import-document"
            cd internal-import-file/import-document
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t renizmy/connector-import-document:6.4.1 . --build-arg BASE_IMAGE=renizmy/opencti-base:6.4.1
            docker tag renizmy/connector-import-document:6.4.1 renizmy/connector-import-document:latest
            docker push renizmy/connector-import-document:6.4.1
            docker push renizmy/connector-import-document:latest
      


workflows:
  version: 2
  build_all:
    jobs:
    
      - build_external-import_
    
      - build_stream_
    
      - build_internal-export-file_
    
      - build_internal-import-file_
    